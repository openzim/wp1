# This file is provided for the dev docker compose environment. Specifically, it is
# for the dev rq workers, which run within the docker-compose environment and must
# connect to redis and mysql using special paths.

# To get end-to-end testing in the dev enviroment to work YOU MUST EDIT THIS FILE in
# the places indicated, then copy it to wp1/wp1/credentials.py.dev. Specifically, edit
# the objects for the key 'STORAGE'.

from wp1.environment import Environment

ENV = Environment.DEVELOPMENT

CONF_LANG = 'en'

CREDENTIALS = {
    Environment.DEVELOPMENT: {

        # This is your connection to the Wikipedia replica database, through toolforge.
        # If you have a toolforge account, you can add your credentials here, after
        # setting up a local tunnel. This is generally NOT NECESSARY because the
        # crawling workers are not currently set up in the dev environment. See:
        # https://wikitech.wikimedia.org/wiki/Help:Toolforge/Database#SSH_tunneling_for_local_testing_which_makes_use_of_Wiki_Replica_databases
        'WIKIDB': {
            'user': 'yourtoolforgeuser', # EDIT this line
            'password': 'yourtoolforgepass', # EDIT this line
            'host': 'localhost',
            'port': 4711,
            'db': 'enwiki_p',
        },

        # The credentials for the local WP1 database. This is prepopulated to work in the
        # docker-compose environment with the dev database that the dev environment already
        # uses (the same db that the dev frontend connects to in your credentials.py). This
        # should not have to be edited.
        'WP10DB': {
            'user': 'root',
            'password': 'wikipedia',
            'host': 'dev-database',
            'port': 3306,
            'db': 'enwp10_dev',
        },

        # The connection string for Redis in the docker-compose environment. This is also
        # prepopulated to use the dev Redis, and should not have to be edited.
        'REDIS': {
            'host': 'redis',
            'port': 9736,
        },

        # These don't exist in development.
        'API': {},

        # Credentials for authentication through mwoauth.
        'MWOAUTH': {
            'consumer_key': '',
            'consumer_secret': '',
        },

        # This is meaningless in the docker-compose environment and should not have to be
        # edited.
        'SESSION': {
            'secret_key': 'WP1_secret_key'
        },

        # Client side url used for redirection in login process. Also meaningless in the
        # docker-compose environment and should not have to be edited.
        'CLIENT_URL': {
            'domains': ['http://localhost:5173'],
            'homepage': 'http://localhost:5173/#/',
            'api': 'http://localhost:5000',
        },

        # Configuration for the storage backend for storing selection lists. You MUST
        # edit this line for your selections to be stored in the dev storage backend, which
        # exists in the cloud.
        # See https://github.com/openzim/zimfarm/wiki/S3-Cache-Policy for how to
        # get these credentials.
        'STORAGE': {
            'key': '', # EDIT this line
            'secret': '', # EDIT this line
            'bucket': 'org-kiwix-dev-wp1',
        },

        # Server URL and credentials for the Zim Farm that will be used to create
        # ZIM files from materialized selections.
        'ZIMFARM': {
            'url': 'https://api.farm.youzim.it/v1',
            's3_url': 'https://fake.wasabisys.com/org-kiwix-zimit',
            'user': 'wp1',
            'password': '', # EDIT this line
            'hook_token': '' # EDIT this line,
        },
    },

    # EDIT: Remove the next line after you've provided actual credentials.
    Environment.PRODUCTION: {}
}
