
[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file

[supervisord]
logfile=/var/log/wp1bot/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=debug                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
childlogdir=/tmp            ; 'AUTO' child log dir, default $TEMP

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface


[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:wp1-materializer]
; In the docker-compose world, the redis host is just 'redis'
command=/usr/local/bin/rq worker -u redis://redis --queue-class rate_limit_queue.RateLimitQueue materializer
; process_num is required if you specify >1 numprocs
process_name=materializer-%(process_num)s

; If you want to run more than one materializer worker, increase this.
numprocs=1

; This is the directory from which RQ is run. Be sure to point this to the
; directory where your source code is importable from
directory=/usr/src/app

redirect_stderr=true
stdout_logfile=/var/log/wp1bot/%(program_name)s-%(process_num)s.log
stdout_logfile_maxbytes=100MB
stdout_logfile_backups=5

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM
autostart=true
autorestart=true

[program:wp1-zimfile-polling]
; In the docker-compose world, the redis host is just 'redis'
command=/usr/local/bin/rq worker -u redis://redis zimfile-polling
; process_num is required if you specify >1 numprocs
process_name=zimfile-polling-%(process_num)s

; If you want to run more than one zimfile-polling worker, increase this
numprocs=1

; This is the directory from which RQ is run. Be sure to point this to the
; directory where your source code is importable from
directory=/usr/src/app

redirect_stderr=true
stdout_logfile=/var/log/wp1bot/%(program_name)s-%(process_num)s.log
stdout_logfile_maxbytes=100MB
stdout_logfile_backups=5

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM
autostart=true
autorestart=true

[program:scheduler]
; In the docker-compose world, the redis host is just 'redis'
command=/usr/local/bin/rqscheduler --host redis -i 20
; process_num is required if you specify >1 numprocs
process_name=scheduler-%(process_num)s
numprocs=1

; This is the directory from which RQ is run. Be sure to point this to the
; directory where your source code is importable from
directory=/usr/src/app

redirect_stderr=true
stdout_logfile=/var/log/wp1bot/%(program_name)s-%(process_num)s.log
stdout_logfile_maxbytes=100MB
stdout_logfile_backups=5

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM
autostart=true
autorestart=true
